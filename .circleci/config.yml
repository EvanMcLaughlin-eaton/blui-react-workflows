version: 2
jobs:
  build_login_workflow:
    working_directory: ~/login-workflow
    docker:
      - image: circleci/node:12.6
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: |
            cd login-workflow
            yarn install --frozen-lockfile
      - save_cache:
          name: Save Cache
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "login-workflow/yarn.lock" }}
      - run:
          name: Prettier Check
          command: |
            cd login-workflow
            yarn prettier:check
      - run:
          name: Set Max Memory
          command: NODE_OPTIONS=--max_old_space_size=4096
      - run:
          name: Lint
          command: |
            cd login-workflow
            yarn lint
      - run:
          name: Tests
          command: |
            cd login-workflow
            yarn test
      - run:
          name: Build
          command: |
            cd login-workflow
            yarn build
      - persist_to_workspace:
          root: .
          paths:
            - login-workflow/dist

  publish_login_workflow:
    docker:
      - image: circleci/node:12.9.1-browsers
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish @pxblue/react-auth-workflow
          command:  |
            cd login-workflow
            MASTER_VERSION=`node -p "require('./package.json').version"`
            NPM_LATEST_VERSION=`npm show @pxblue/react-auth-workflow version`
            if ! [ $MASTER_VERSION == $NPM_LATEST_VERSION ];
            then
                npm publish
            else
                echo "Latest version is already published."
            fi

workflows:
  version: 2
  react_workflows:
    jobs:
      - build_login_workflow
      - publish_login_workflow:
          requires:
            - build_login_workflow
          filters:
            branches:
              only:
                - master
